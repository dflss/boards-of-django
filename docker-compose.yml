version: '3.10'

services:
  django:
    build:
      context: ./docker/django
      dockerfile: Dockerfile
    command: gunicorn boards_of_django.wsgi:application -w 2 -b :8000 --reload
    env_file:
      - ./.env
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
    volumes:
      - ".:/usr/src/app"
    depends_on:
      - db
    networks:
      - django
  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    networks:
      - django
  nginx:
    build: ./docker/nginx
    ports:
      - 80:80
    volumes:
      - "./static:/usr/src/static"
      - "./media:/usr/src/media"
    depends_on:
      - django
    networks:
      - django
  redis:
    image: redis:alpine
    networks:
      - django
  celery:
    restart: always
    build:
      context: ./docker/django
      dockerfile: Dockerfile
    command: celery -A tasks worker -l info
    volumes:
      - ".:/usr/src/app"
    env_file:
     - ./.env
    depends_on:
      - db
      - redis
      - django
    networks:
      - django

volumes:
  postgres_data:
networks:
  django: